package au.com.api.wallet.dao.entity;

import java.util.List;
import java.util.UUID;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import au.com.api.wallet.dao.entity.core.IdentityEntity;
import lombok.AccessLevel;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.experimental.FieldNameConstants;

@Entity
@Table(name = "account")
@Getter
@Setter
@FieldNameConstants
@NoArgsConstructor(access = AccessLevel.PROTECTED)
public class AccountEntity extends IdentityEntity {

    /**
     * The unique immutable id generated by the client to uniquely identify the resource. It is to be used by clients
     * to retrieve an instance of the resource.
     */
    @Column(name = "user_id", unique = true, nullable = false)
    protected UUID userId;

    @Column(name = "user_name")
    protected String userName;

    @Column(name = "balance")
    protected long balance;

    @Column(name = "currency")
    protected String currency;

    @OneToMany(mappedBy = "account", cascade = CascadeType.ALL)
    protected List<PaymentTransactionEntity> paymentTransactions;

    @Builder(toBuilder = true)
    public AccountEntity(
            final UUID id,
            final UUID userId,
            final String userName,
            final Long balance,
            final String currency,
            final List<PaymentTransactionEntity> paymentTransactions) {

        super(id);

        this.userId = userId;
        this.userName = userName;
        this.balance = balance;
        this.currency = currency;
        this.paymentTransactions = paymentTransactions;
    }

    public static class AccountEntityBuilder extends IdentityEntityBuilder {
    }
}
